<?xml version="1.0"?>
<xsl:stylesheet version="1.1"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="text" encoding="utf-8" media-type="text/plain" />
    <xsl:variable name="lcletters">abcdefghijklmnopqrstuvwxyz</xsl:variable>
    <xsl:variable name="ucletters">ABCDEFGHIJKLMNOPQRSTUVWXYZ</xsl:variable>
	<xsl:template match="opcodes">
		<xsl:text>#include "kefir/ir/mnemonic.h"
#include "kefir/core/basic-types.h"

// Do not edit this file. It is autogenerated. Edit resources/opcodes.xml instead.
static struct {
    kefir_iropcode_t opcode;
    const char *symbol;
} OPCODE_SYMBOLS[] = {
</xsl:text>
		<xsl:for-each select="opcode">
			<xsl:text>    { KEFIR_IROPCODE_</xsl:text>
			<xsl:value-of select="translate(@id, $lcletters, $ucletters)" />
			<xsl:text>, KEFIR_IROPCODE_MNEMONIC_</xsl:text>
			<xsl:value-of select="translate(@id, $lcletters, $ucletters)" />
			<xsl:text>}, &#xa;</xsl:text>
		</xsl:for-each>
		<xsl:text>};

const char *kefir_iropcode_mnemonic(kefir_iropcode_t opcode) {
    for (kefir_size_t i = 0; i &lt; sizeof(OPCODE_SYMBOLS) / sizeof(OPCODE_SYMBOLS[0]); i++) {
        if (OPCODE_SYMBOLS[i].opcode == opcode) {
            return OPCODE_SYMBOLS[i].symbol;
        }
    }
    return NULL;
}&#xa;</xsl:text>
	</xsl:template>

</xsl:stylesheet>