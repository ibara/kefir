Kefir C11 compiler
Usage: kefir [OPTIONS] [INPUT FILE]

If no input file is provided, stdin will be used.
Options:
    -h,--help                           Print this help text
    -v,--version                        Print version
    -o,--output file                    Print output to the file instead of stdout
    --dump-asm                          Print assembly output
    --dump-ir                           Print intermediate representation (IR) bytecode
    --dump-ast                          Print abstract syntax tree (AST)
    --dump-tokens                       Print tokens
    -p,--preprocess                     Print result of preprocessing
    -P,--skip-preprocessor              Skip preprocessing stage. Cannot be specified along with -p
    -I,--include-path dir               Add directory to include search path
    -D,--define identifier[=macro]      Define macro
    --pp-timestamp                      Override preprocessor timestamp
    --json-errors                       Print errors in JSON format to stderr
    --tabular-errors                    Print errors in tabular format to stderr
    --target-profile profile            Generate code for specified target (see targets section below)
    --source-id identifier              Force use provided source file identifier
    --detailed-output                   Include references to source file in AST and token dumps

Parsing options:
    --parser-fail-on-attributes         Fail if __attribute__((...)) is encountered
    --parser-implicit-function-decl-int Permit function definitiong with missing return type

Analysis options:
    --analyzer-non-strict-qualifiers    Disable strict qualifier checks for pointers
    --analyzer-signed-enums             Force all enums to have signed integral type

Targets:
    amd64-sysv-gas (default)             Produce GNU As-compatible assembly adhering System-V AMD64 ABI

License: GNU GPLv3
Author: Jevgenijs Protopopovs
Website: https://github.com/protopopov1122/Kefir
Contacts: jprotopopov1122@gmail.com
